<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <title>웹캠 컬러 디더링</title>
  <style>
    body { font-family: sans-serif; text-align: center; padding: 20px; background: #f7f7f7; }
    button { padding: 10px 20px; font-size: 16px; cursor: pointer; }
    canvas { margin-top: 10px; border: 1px solid #ccc; image-rendering: pixelated; }
    label { display: block; margin-top: 10px; font-weight: bold; }
    #statusMsg { margin: 10px; color: #e74c3c; font-weight: bold; }
  </style>
</head>
<body>
  <button id="startBtn">📷 카메라 시작</button>
  <p id="statusMsg"></p>
  <video id="video" playsinline muted autoplay style="display: none;"></video>
  <canvas id="canvas" width="320" height="240"></canvas>
  <br>
  <label>Threshold: <input type="range" id="threshold" min="0" max="255" value="128"></label>

  <script>
    const video = document.getElementById('video');
    const canvas = document.getElementById('canvas');
    const ctx = canvas.getContext('2d');
    const thresholdSlider = document.getElementById('threshold');
    const startBtn = document.getElementById('startBtn');
    const statusMsg = document.getElementById('statusMsg');

    startBtn.addEventListener('click', async () => {
      statusMsg.textContent = '카메라 권한 요청 중...';

      try {
        const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: false });
        video.srcObject = stream;
        await video.play();

        startBtn.style.display = 'none';
        statusMsg.textContent = '';
        requestAnimationFrame(ditherFrame);
      } catch (err) {
        if (err.name === 'NotAllowedError') {
          statusMsg.textContent = '❌ 카메라 권한이 거부되었습니다. 브라우저 설정에서 허용해주세요.';
        } else if (err.name === 'NotFoundError') {
          statusMsg.textContent = '📵 카메라 장치를 찾을 수 없습니다.';
        } else {
          statusMsg.textContent = '⚠️ 오류 발생: ' + err.message;
        }
      }
    });

    function ditherFrame() {
      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);
      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
      const data = imageData.data;
      const threshold = parseInt(thresholdSlider.value);

      for (let i = 0; i < data.length; i += 4) {
        data[i]   = data[i]   < threshold ? 0 : 255;
        data[i+1] = data[i+1] < threshold ? 0 : 255;
        data[i+2] = data[i+2] < threshold ? 0 : 255;
      }

      ctx.putImageData(imageData, 0, 0);
      requestAnimationFrame(ditherFrame);
    }
  </script>
</body>
</html>
